// VSCode settings.json to override the defaults.
// Setup: CommandPalette -> "Open User Settings (JSON)", copy over.
{
  // Basic settings
  "editor.accessibilitySupport": "off",
  "editor.fontSize": 13,
  "editor.formatOnSave": true,
  "editor.minimap.enabled": false,
  "editor.minimap.renderCharacters": false,
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,
  "explorer.confirmDelete": false,
  "files.insertFinalNewline": false,
  "search.seedOnFocus": true,
  "search.seedWithNearestWord": false,
  "search.showLineNumbers": true,
  "search.smartCase": true,
  "terminal.external.osxExec": "iterm.app",
  "terminal.integrated.commandsToSkipShell": [
    // Make tmux splits left/right navigation work by having ctrl+hl keybindings
    // reach the shell without being taken over by VSCode when terminal is focused.
    //
    // This is not super smooth - for instance, the only way to navigate out to
    // the left panel when terminal is focused is to first hop up to the editor (ctrl+k)
    // and then a hop left (ctrl+h) to the explorer (or whatever panel is open).
    // This also means that horizontal tmux splits navigation (ctrl+jk) can't be supported
    // lest we be trapped in the terminal forever.
    // But it's okay, I'll live.
    "-workbench.action.navigateLeft",
    "-workbench.action.navigateRight",
    // Make VSCode workspace quick switch (alt+tab) skip shell and VSCode directly.
    // Otherwise, alt+tab to rotate through VSCode workspaces doesn't work when terminal is focused.
    "workbench.action.quickSwitchWindow"
  ],
  "terminal.integrated.defaultProfile.osx": "zsh",
  "workbench.colorTheme": "GitHub Light",

  // Filetype settings
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },

  // Extension settings: VSCode Neovim
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },

  // Extension settings: GitHub Copilot
  "github.copilot.nextEditSuggestions.enabled": true,

  // Extension settings: Todo MD
  "todomd.defaultFile": "/Users/vish/gdrive/zettelkasten/gtd/todo.md",
  "todomd.defaultArchiveFile": "/Users/vish/gdrive/zettelkasten/gtd/todo.archive.md",
  "todomd.defaultSomedayFile": "/Users/vish/gdrive/zettelkasten/gtd/someday.md",
  "todomd.closestDueDateIncludeWeekday": true,
  "todomd.tabSize": 2,
  "todomd.webview.fontSize": "12px",

  // Extension settings: Markdown Checkbox
  "markdown-checkbox.dateWhenChecked": false,
  "markdown-checkbox.italicWhenChecked": false,
  "markdown-checkbox.strikeThroughWhenChecked": false,

  // Extension settings: Markdown Preview Enhanced
  "markdown-preview-enhanced.alwaysShowBacklinksInPreview": true,
  "markdown-preview-enhanced.previewColorScheme": "editorColorScheme",

  // Extension settings: Todo Tree
  // Remove [ ] and [x] from the default tags list as those are handled by Highlight below.
  "todo-tree.general.tags": ["BUG", "HACK", "FIXME", "TODO", "XXX"],

  // Extension settings: Highlight (https://github.com/fabiospampinato/vscode-highlight)
  // Config generated by Copilot and Claude Sonnet 4.
  "highlight.regexes": {
    // Progress patterns - partial completion (e.g., [3/7], [5/10])
    "(\\[\\d+/\\d+\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#ddb026",
          "backgroundColor": "#ddb026",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    },
    // Progress patterns - exact match/completed (e.g., [7/7], [3/3])
    "(\\[(\\d+)/(\\2)\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#298cff",
          "backgroundColor": "#298cff",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    },
    // Progress patterns - not started (e.g., [0/7], [0/10])
    "(\\[0/\\d+\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#6a737b",
          "backgroundColor": "#6a737b",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    },
    // Markdown checkboxes - completed (e.g., [x], [X])
    "(\\[[xX]\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#3a93f8",
          "backgroundColor": "#3a93f8",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    },
    // Markdown checkboxes - empty/uncompleted (e.g., [ ])
    "(\\[\\s\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#6a737b",
          "backgroundColor": "#6a737b",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    },
    // Recap markers - positive/good (e.g., [+])
    "(\\[\\+\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#28a745",
          "backgroundColor": "#28a745",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    },
    // Recap markers - neutral/okay (e.g., [=])
    "(\\[\\=\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#d1c134",
          "backgroundColor": "#d1c134",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    },
    // Recap markers - negative/bad (e.g., [-])
    "(\\[-\\])": {
      "filterFileRegex": ".*\\.(md|txt)$",
      "decorations": [
        {
          "overviewRulerColor": "#df3939",
          "backgroundColor": "#df3939",
          "color": "#ffffff",
          "fontWeight": "bold"
        }
      ]
    }
  }
}


